<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="frmProducts.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>